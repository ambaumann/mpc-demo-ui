{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/domain/Solution.ts","webpack:///./src/app/domain/SolutionEntry.ts","webpack:///./src/app/domain/UserInput.ts","webpack:///./src/app/domain/index.ts","webpack:///./src/app/result/result.component.css","webpack:///./src/app/result/result.component.html","webpack:///./src/app/result/result.component.ts","webpack:///./src/app/service/api.error-handler.service.ts","webpack:///./src/app/service/api.service.ts","webpack:///./src/app/vote/vote.component.css","webpack:///./src/app/vote/vote.component.html","webpack:///./src/app/vote/vote.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"div { background-color: #E5E7E9; }\\n\"","module.exports = \"<!--\\n  <nav class=\\\"navbar navbar-default navbar-pf\\\" role=\\\"navigation\\\">\\n  <div class=\\\"navbar-header\\\">\\n    <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse-1\\\">\\n      <span class=\\\"sr-only\\\">Toggle navigation</span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n      <span class=\\\"icon-bar\\\"></span>\\n    </button>\\n    <a class=\\\"navbar-brand active\\\" href=\\\"#/\\\" id=\\\"logo\\\" title=\\\"\\\"\\n       routerlink=\\\"/\\\"\\n       routerlinkactive=\\\"active\\\"\\n       ng-reflect-router-link=\\\"/\\\"\\n       ng-reflect-router-link-active=\\\"active\\\">MPC Truck Request Form</a>\\n  </div>\\n  <nav class=\\\"collapse navbar-collapse\\\">\\n    <ul class=\\\"nav navbar-nav navbar-right navbar-iconic navbar-utility\\\">\\n      <li class=\\\"dropdown\\\" style=\\\"padding: 5px\\\">\\n        <pfng-application-launcher\\n            [label]=\\\"'Application Launcher'\\\"\\n            [showAsList]=\\\"false\\\">\\n        </pfng-application-launcher>\\n      </li>\\n    </ul>\\n  </nav>\\n</nav>\\n -->\\n<div>\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\n\nimport { Notification, NotificationEvent, NotificationType } from 'patternfly-ng/notification';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { AgmCoreModule } from '@agm/core';\nimport { AgmSnazzyInfoWindowModule  } from '@agm/snazzy-info-window';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { AgmDirectionModule } from 'agm-direction';\nimport { ApplicationLauncherModule } from 'patternfly-ng';\nimport { AppComponent } from './app.component';\nimport { ResultComponent } from './result/result.component';\nimport { ErrorHandlerService } from './service/api.error-handler.service';\nimport { ApiService } from './service/api.service';\nimport { VoteComponent } from './vote/vote.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VoteComponent,\n    ResultComponent\n  ],\n  imports: [\n    ApplicationLauncherModule,\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDqJJmddZYWipbXmwfAfiSb1gMXj8P6Jso'\n    }),\n    RouterModule.forRoot([\n      { path: '', component: VoteComponent },\n      { path: 'result', component: ResultComponent},\n      { path: '**', redirectTo: '' }\n    ]),\n    AgmCoreModule,\n    AgmDirectionModule,\n    AgmSnazzyInfoWindowModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorHandlerService, multi: true },\n    ApiService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { SolutionEntry } from './SolutionEntry';\n\nexport class Solution implements Serializable<Solution> {\n\n  public solutionName: String;\n\n  public solutionEntries: SolutionEntry[];\n\n  public getWaypoints(): {location: {lat: number, lng: number }, stopover: boolean}[] {\n    return this.solutionEntries.filter(es => es.date !== null).map(es => {\n      return  {location: {lat: es.latitude, lng: es.longitude}, stopover: true };\n    });\n  }\n\n  public getSolvedEntries(): SolutionEntry[] {\n    return this.solutionEntries.filter(es => es.date !== null);\n  }\n\n  public getUnsolvedEntries(): SolutionEntry[] {\n    return this.solutionEntries.filter(es => es.date === null);\n  }\n\n  public getLatLongArray(): SolutionEntry[] {\n    return this.solutionEntries;\n  }\n\n  public getElections(): {accountId: String, venueName: String, cityName: String, date: Date}[] {\n    return this.solutionEntries.map(es => {\n      return  {accountId: es.accountId, venueName: es.venueName, cityName: es.cityName, date: es.date};\n    });\n  }\n\n  deserialize(input): Solution {\n    this.solutionName = input.solutionName;\n    const array: any[] = input.solutionEntries;\n    this.solutionEntries = array.map(i => new SolutionEntry().deserialize(i));\n    return this;\n  }\n\n  deserializeAccounts(input): Solution {\n    const array: any[] = input;\n    this.solutionEntries = array.map(i => new SolutionEntry().deserializeAccount(i));\n    return this;\n  }\n}\n","\nexport class SolutionEntry implements Serializable<SolutionEntry> {\n\n  public accountId: String;\n  public venueName: String;\n  public cityName: String;\n  public latitude: number;\n  public longitude: number;\n  public revenueOpportunity: String;\n  public date: Date;\n\n  deserialize(input): SolutionEntry {\n    this.accountId = input.accountId;\n    this.venueName = input.venueName;\n    this.cityName = input.cityName;\n    this.latitude = input.latitude;\n    this.longitude = input.longitude;\n    this.revenueOpportunity = input.revenueOpportunity;\n    this.date = new Date(input.date);\n    return this;\n  }\n\n  deserializeAccount(input): SolutionEntry {\n    this.accountId = input.accountId;\n    this.venueName = input.venueName;\n    this.cityName = input.city;\n    this.latitude = input.latitude;\n    this.longitude = input.longitude;\n    this.revenueOpportunity = input.revenueOpportunityStr;\n    if (input.availableDate !== null) {\n      this.date = new Date(input.availableDate);\n    } else {\n      this.date = null;\n    }\n    return this;\n  }\n\n  getMonthDay(): String {\n    if (this.date === null) {\n      return '';\n    }\n    return (this.date.getMonth() + 1) + '/' + this.date.getUTCDate();\n  }\n\n}\n","\nexport class UserInput {\n\n}\n","export * from './Solution';\nexport * from './SolutionEntry';\nexport * from './UserInput';\n","module.exports = \"agm-map {\\n  height: 87vh;\\n  width: 100%;\\n}\\n\\n.loading {\\n  height: 87vh;\\n}\\n\\n.container {\\n  width: 90%;\\n  height: 100vh;\\n}\\n\\n.btn-block {\\n  margin-top: 1vh;\\n  /* padding: 10% 0; */\\n}\\n\\n.loc-text {\\n  white-space: nowrap;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div>\\n    <h1><b>MPC Tour of the Americas</b></h1>\\n  </div>\\n  <div class=\\\"row col-12\\\">\\n    <p *ngIf=\\\"loading\\\" class=\\\"loading\\\">Loading</p>\\n    <div *ngIf=\\\"!loading\\\">\\n      <!-- Map For All Locations-->\\n      <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"5\\\" *ngIf=\\\"screen === 1\\\">\\n        <agm-marker [latitude]=\\\"25.0343\\\" [longitude]=\\\"-77.3963\\\" [iconUrl]=\\\"flImagePath\\\" [label]=\\\"{color: 'black',fontWeight: 'bold',text: 'Cat 4'}\\\"></agm-marker>\\n        <agm-marker [latitude]=\\\"38.6270\\\" [longitude]=\\\"-90.1994\\\" [iconUrl]=\\\"truckLocation\\\"></agm-marker>\\n        <div *ngFor=\\\"let m of allAccountsMarkers; let i = index\\\">\\n          <agm-marker [latitude]=\\\"m.latitude\\\" [longitude]=\\\"m.longitude\\\" [iconUrl]=\\\"bluePin\\\">\\n            <agm-snazzy-info-window [isOpen]=\\\"true\\\" [pointer]=\\\"false\\\" [maxWidth]=\\\"200\\\" [padding]=\\\"'2px'\\\" [fontSize]=\\\"'8px'\\\"\\n              [closeWhenOthersOpen]=\\\"false\\\" [showCloseButton]=\\\"false\\\">\\n              <ng-template>\\n                <div class=\\\"loc-text\\\">{{m.venueName}}</div>\\n              </ng-template>\\n            </agm-snazzy-info-window>\\n          </agm-marker>\\n        </div>\\n      </agm-map>\\n      <!-- Map for selected locations -->\\n      <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"5\\\" *ngIf=\\\"screen === 2\\\">\\n        <agm-marker [latitude]=\\\"25.0343\\\" [longitude]=\\\"-77.3963\\\" [iconUrl]=\\\"flImagePath\\\" [label]=\\\"{color: 'black',fontWeight: 'bold',text: 'Cat 4'}\\\"></agm-marker>\\n        <agm-marker [latitude]=\\\"38.6270\\\" [longitude]=\\\"-90.1994\\\" [iconUrl]=\\\"truckLocation\\\"></agm-marker>\\n        <div *ngFor=\\\"let m of markers; let i = index\\\">\\n          <agm-marker [latitude]=\\\"m.latitude\\\" [longitude]=\\\"m.longitude\\\">\\n            <agm-snazzy-info-window [isOpen]=\\\"true\\\" [pointer]=\\\"false\\\" [maxWidth]=\\\"200\\\" [padding]=\\\"'2px'\\\" [fontSize]=\\\"'8px'\\\"\\n              [closeWhenOthersOpen]=\\\"false\\\" [showCloseButton]=\\\"false\\\">\\n              <ng-template>\\n                <div class=\\\"loc-text\\\">{{m.venueName}} {{m.getMonthDay()}}: {{m.revenueOpportunity}}</div>\\n              </ng-template>\\n            </agm-snazzy-info-window>\\n          </agm-marker>\\n        </div>\\n      </agm-map>\\n      <!-- Map for route -->\\n      <agm-map [latitude]=\\\"lat\\\" [longitude]=\\\"lng\\\" [zoom]=\\\"5\\\" [usePanning]=\\\"true\\\" *ngIf=\\\"screen === 3\\\">\\n        <div *ngFor=\\\"let m of solvedEntries; let i = index\\\">\\n          <agm-marker [latitude]=\\\"m.latitude\\\" [longitude]=\\\"m.longitude\\\" [label]=\\\"(i + 1).toString()\\\">\\n            <agm-snazzy-info-window [isOpen]=\\\"true\\\" [pointer]=\\\"false\\\" [maxWidth]=\\\"200\\\" [padding]=\\\"'2px'\\\" [fontSize]=\\\"'8px'\\\"\\n              [closeWhenOthersOpen]=\\\"false\\\" [showCloseButton]=\\\"false\\\">\\n              <ng-template>\\n                <div class=\\\"loc-text\\\">{{m.venueName}} {{m.getMonthDay()}}: {{m.revenueOpportunity}}</div>\\n              </ng-template>\\n            </agm-snazzy-info-window>\\n          </agm-marker>\\n        </div>\\n        <div *ngFor=\\\"let m of unsolvedEntries; let i = index\\\">\\n          <agm-marker [latitude]=\\\"m.latitude\\\" [longitude]=\\\"m.longitude\\\" [label]=\\\"X\\\">\\n            <agm-snazzy-info-window [isOpen]=\\\"true\\\" [pointer]=\\\"false\\\" [maxWidth]=\\\"200\\\" [padding]=\\\"'2px'\\\" [fontSize]=\\\"'8px'\\\"\\n              [closeWhenOthersOpen]=\\\"false\\\" [showCloseButton]=\\\"false\\\">\\n              <ng-template>\\n                <div class=\\\"loc-text\\\">{{m.venueName}} {{m.getMonthDay()}}: {{m.revenueOpportunity}}</div>\\n              </ng-template>\\n            </agm-snazzy-info-window>\\n          </agm-marker>\\n        </div>\\n        <agm-marker [latitude]=\\\"25.0343\\\" [longitude]=\\\"-77.3963\\\" [iconUrl]=\\\"flImagePath\\\" [label]=\\\"{color: 'black',fontWeight: 'bold',text: 'Cat 4'}\\\"></agm-marker>\\n        <agm-direction [markerOptions]=\\\"markerOptions\\\" [renderOptions]=\\\"renderOptions\\\" [origin]=\\\"origin\\\" [destination]=\\\"destination\\\"\\n          [waypoints]=\\\"waypoints\\\" [optimizeWaypoints]=\\\"false\\\">\\n        </agm-direction>\\n      </agm-map>\\n    </div>\\n  </div>\\n  <div class=\\\"row buttons\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <button class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"setShowPins()\\\">Show Requested Accounts</button>\\n    </div>\\n    <div class=\\\"col-md-6\\\">\\n      <button class=\\\"btn btn-primary btn-lg btn-block\\\" (click)=\\\"setShowRoute()\\\" [attr.disabled]=\\\"!calculatedResults?'':null\\\">Find\\n        Optimal Route</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Solution, SolutionEntry } from '../domain';\nimport { Subject, Observable, of, merge } from 'rxjs';\nimport { ApiService } from '../service/api.service';\n\n\n@Component({\n  //  selector: 'my-app',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.css']\n})\nexport class ResultComponent implements OnInit {\n  lat: Number = 34.7714347;\n  lng: Number = -98.317331;\n  public waypoints: {\n    location: { lat: number; lng: number };\n    stopover: boolean;\n  }[];\n\n  constructor(private api: ApiService) {}\n\n  public flImagePath = './assets/hurricane-60x60.png';\n  public bluePin = './assets/blue-dot-40x40.png';\n  public truckLocation = './assets/truck-40x40.png';\n  origin: String = 'Saint Lous, MO';\n  public markerOptions = {\n    origin: {\n      icon: this.truckLocation,\n      draggable: false\n    }\n  };\n\n  public renderOptions = {\n    suppressMarkers: true\n  };\n\n  destination: { lat: number; lng: number };\n  public solution: Solution;\n  public allAccountsMarkers: SolutionEntry[];\n  public markers: SolutionEntry[];\n\n  public solvedEntries: SolutionEntry[];\n  public unsolvedEntries: SolutionEntry[];\n\n  public loading = true;\n  public calculatedResults = false;\n  public screen = Screen.ALL;\n\n  ngOnInit() {\n    this.loading = true;\n    this.api.getAllAccounts().subscribe(s => {\n      if (s != null) {\n        console.log('all accounts');\n        this.loading = false;\n        this.allAccountsMarkers = s.solutionEntries;\n      }\n      console.log(this.allAccountsMarkers);\n    });\n  }\n\n  setShowPins() {\n    this.loading = true;\n    this.screen = Screen.SELECTED;\n    this.api.getRequestedAccounts().subscribe(s => {\n      if (s != null) {\n        console.log('requested accounts');\n        this.markers = s.getLatLongArray();\n        this.loading = false;\n      }\n      console.log(this.markers);\n      setTimeout(() => this.resultsAreReady(), 31000);\n    });\n  }\n\n  resultsAreReady() {\n    console.log('timer hit!');\n    this.calculatedResults = true;\n  }\n\n  setShowRoute() {\n    this.screen = Screen.ROUTE;\n    this.loading = true;\n    this.api.getSolution().subscribe(s => {\n      if (s != null) {\n        console.log('solution');\n        this.setSolution(s);\n        this.loading = false;\n      }\n      console.log(this.markers);\n    });\n  }\n\n  setSolution(s: Solution) {\n    this.solution = s;\n    const temp = s.getWaypoints();\n    this.unsolvedEntries = s.getUnsolvedEntries();\n    console.log('unsolvedEntries: ' + this.unsolvedEntries);\n    this.solvedEntries = s.getSolvedEntries();\n    console.log('solvedEntries: ' + this.solvedEntries);\n    const cut: {\n      location: { lat: number; lng: number };\n      stopover: boolean;\n    }[] = temp.slice(0, temp.length - 1);\n    this.waypoints = cut;\n    this.destination = temp[temp.length - 1].location;\n  }\n\n  // blackLabel(index: number): {color: string, fontWeight: string, text: string} {\n  //   console.log('This might hurt.');\n  //   return {color: 'black',\n  //     fontWeight: 'bold',\n  //   text: index.toString()};\n  // }\n}\n\nexport enum Screen {\n  ALL = 1,\n  SELECTED,\n  ROUTE\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorHandlerService implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next\n      .handle(req)\n      .pipe(catchError(err => {\n        console.log('error occured');\n        return Observable.throw(err);\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, of, merge } from 'rxjs';\nimport { mapTo, delay, map } from 'rxjs/operators';\nimport { Solution } from '../domain';\n\n@Injectable()\nexport class ApiService {\n\n  // swagger link -http://mpc-demo-mpc-demo.tate.rh.stencell.net/swagger-ui.html#/\n  private base = 'http://mpc-demo-mpc-demo.tate.rh.stencell.net/api/solver/';\n  private voteUrl = this.base + 'userinput';\n  private allAccountsUrl = this.base + 'allaccounts';\n  private accountsUrl = this.base + 'defaultaccounts';\n  private requestedUrl = this.base + 'selectedaccounts';\n  private solutionUrl = this.base + 'solution';\n  private logCacheUrl = this.base + 'printcache';\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getAllAccounts(): Observable<Solution> {\n    return this.http.get(this.allAccountsUrl).pipe(map(o => new Solution().deserializeAccounts(o)));\n  }\n\n  public getSolution(): Observable<Solution> {\n    return this.http.get(this.solutionUrl).pipe(map(o => new Solution().deserializeAccounts(o)));\n  }\n\n  public getAccounts(): Observable<Solution> {\n\n    return this.http.get(this.accountsUrl).pipe(map(o => new Solution().deserializeAccounts(o)));\n\n    // return of(this.hardCodedWithID());\n  }\n\n  public getRequestedAccounts(): Observable<Solution> {\n    return this.http.get(this.requestedUrl).pipe(map(o => {\n      console.log(o);\n      return new Solution().deserializeAccounts(o);\n    }));\n  }\n\n  public vote(accountId) {\n    console.log('vote=' + accountId);\n    const body = new HttpParams()\n      .set('accountId', accountId);\n    const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded')\n      .set('Accept', '*/*');\n    const obs = this.http.post(this.voteUrl, body.toString(), {headers});\n    obs.subscribe(\n      // (val) => { console.log('api vote val', val); },\n      // (response) => { console.log('api vote response', response); },\n      // () => { console.log('api vote complete'); }\n    );\n    console.log(this.logCacheUrl, 'will log the cache');\n  }\n\n\n  private hardCoded(): Solution {\n    return new Solution().deserialize({\n      'solutionName' : 'MPC Demo',\n      'solutionEntries' : [ {\n        'venueName' : 'C8',\n        'cityName' : 'New York, New York',\n        'latitude' : 40.7128,\n        'longitude' : -74.006,\n        'revenueOpportunity' : 2200000,\n        'date' : '2018-10-16'\n      }, {\n        'venueName' : 'E3',\n        'cityName' : 'Dallas, Texas',\n        'latitude' : 32.7767,\n        'longitude' : -96.797,\n        'revenueOpportunity' : 2400000,\n        'date' : '2018-10-17'\n      }, {\n        'venueName' : 'V2',\n        'cityName' : 'Foster City, California',\n        'latitude' : 37.5585,\n        'longitude' : -122.2711,\n        'revenueOpportunity' : 13000000,\n        'date' : '2018-10-18'\n      }, {\n        'venueName' : 'P4',\n        'cityName' : 'Mexico City, Mexico',\n        'latitude' : 19.4326,\n        'longitude' : -99.1332,\n        'revenueOpportunity' : 2000000,\n        'date' : '2018-10-22'\n      }, {\n        'venueName' : 'M6',\n        'cityName' : 'Rochester, New York',\n        'latitude' : 39.1031,\n        'longitude' : -84.512,\n        'revenueOpportunity' : 100000,\n        'date' : '2018-10-23'\n      }, {\n        'venueName' : 'D5',\n        'cityName' : 'Chicago, Illinois',\n        'latitude' : 41.8781,\n        'longitude' : -87.6298,\n        'revenueOpportunity' : 1900000,\n        'date' : '2018-10-24'\n      }, {\n        'venueName' : 'R7',\n        'cityName' : 'Toronto, Canada',\n        'latitude' : 43.6532,\n        'longitude' : -79.3832,\n        'revenueOpportunity' : 2400000,\n        'date' : '2018-10-25'\n      }, {\n        'venueName' : 'T10',\n        'cityName' : 'Seattle, Washington',\n        'latitude' : 47.6062,\n        'longitude' : -122.3321,\n        'revenueOpportunity' : 1500000,\n        'date' : '2018-10-29'\n      }, {\n        'venueName' : 'A1',\n        'cityName' : 'Phoenix, California',\n        'latitude' : 33.4484,\n        'longitude' : -112.074,\n        'revenueOpportunity' : 100000,\n        'date' : '2018-11-29'\n      }, {\n        'venueName' : '9D',\n        'cityName' : 'Atlanta, Georgia',\n        'latitude' : 33.749027,\n        'longitude' : -84.388229,\n        'revenueOpportunity' : 10000000,\n        'date' : null\n      } ]\n    });\n  }\n\n  private hardCodedWithID(): Solution {\n    return new Solution().deserialize({\n      'solutionName' : 'MPC Demo',\n      'solutionEntries' : [ {\n        'accountId' : '100',\n        'venueName' : 'C8',\n        'cityName' : 'New York, New York',\n        'latitude' : 40.7128,\n        'longitude' : -74.006,\n        'revenueOpportunity' : 2200000,\n        'date' : '2018-10-16'\n      }, {\n        'accountId' : '101',\n        'venueName' : 'E3',\n        'cityName' : 'Dallas, Texas',\n        'latitude' : 32.7767,\n        'longitude' : -96.797,\n        'revenueOpportunity' : 2400000,\n        'date' : '2018-10-17'\n      }, {\n        'accountId' : '102',\n        'venueName' : 'V2',\n        'cityName' : 'Foster City, California',\n        'latitude' : 37.5585,\n        'longitude' : -122.2711,\n        'revenueOpportunity' : 13000000,\n        'date' : '2018-10-18'\n      }, {\n        'accountId' : '103',\n        'venueName' : 'P4',\n        'cityName' : 'Mexico City, Mexico',\n        'latitude' : 19.4326,\n        'longitude' : -99.1332,\n        'revenueOpportunity' : 2000000,\n        'date' : '2018-10-22'\n      }, {\n        'accountId' : '104',\n        'venueName' : 'M6',\n        'cityName' : 'Rochester, New York',\n        'latitude' : 39.1031,\n        'longitude' : -84.512,\n        'revenueOpportunity' : 100000,\n        'date' : '2018-10-23'\n      }, {\n        'accountId' : '105',\n        'venueName' : 'D5',\n        'cityName' : 'Chicago, Illinois',\n        'latitude' : 41.8781,\n        'longitude' : -87.6298,\n        'revenueOpportunity' : 1900000,\n        'date' : '2018-10-24'\n      }, {\n        'accountId' : '106',\n        'venueName' : 'R7',\n        'cityName' : 'Toronto, Canada',\n        'latitude' : 43.6532,\n        'longitude' : -79.3832,\n        'revenueOpportunity' : 2400000,\n        'date' : '2018-10-25'\n      }, {\n        'accountId' : '107',\n        'venueName' : 'T10',\n        'cityName' : 'Seattle, Washington',\n        'latitude' : 47.6062,\n        'longitude' : -122.3321,\n        'revenueOpportunity' : 1500000,\n        'date' : '2018-10-29'\n      }, {\n        'accountId' : '108',\n        'venueName' : 'A1',\n        'cityName' : 'Phoenix, California',\n        'latitude' : 33.4484,\n        'longitude' : -112.074,\n        'revenueOpportunity' : 100000,\n        'date' : '2018-11-29'\n      }, {\n        'accountId' : '109',\n        'venueName' : '9D',\n        'cityName' : 'Atlanta, Georgia',\n        'latitude' : 33.749027,\n        'longitude' : -84.388229,\n        'revenueOpportunity' : 10000000,\n        'date' : null\n      } ]\n    });\n\n  }\n\n}\n","module.exports = \"\\n.form-group {\\n  padding: 15px;\\n}\\n\\n.container {\\n  height: 100vh;\\n}\\n\\nlabel {\\n  font-size: 14px;\\n}\\n\\n.radio-inline {\\n  margin-top: 0px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n\\n  <form #electionForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(electionForm.value)\\\" class=\\\"ui form\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h2 class=\\\"panel-tittle\\\">MPC Truck Request Form</h2>\\n      </div>\\n\\n      <p *ngIf=\\\"loading\\\" class=\\\"loading\\\">Loading...</p>\\n      <div *ngIf=\\\"!loading\\\" class=\\\"panel-body\\\">\\n        <div class=\\\"form-group\\\" *ngIf=\\\"!wasSubmitted\\\">\\n          <label>Select an account</label>\\n          <div class=\\\"form-check\\\" *ngFor=\\\"let e of elections\\\">\\n              <label class=\\\"form-check-label\\\" [for]=\\\"e.accountId\\\">\\n                  <input class=\\\"form-check-input radio-inline\\\" [id]=\\\"e.accountId\\\" type=\\\"radio\\\" name=\\\"election\\\" [value]=\\\"e.accountId\\\" [(ngModel)]=\\\"election\\\" title=\\\"Please select at least one account.\\\" required>\\n                  <b>{{e.venueName}}</b> ({{e.cityName}}) - {{ e.date | date:'MM/dd':'UTC' }}\\n              </label>\\n          </div>\\n          <input class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Request Truck\\\" [disabled]=\\\"!electionForm.valid\\\">\\n        </div>\\n        <div *ngIf=\\\"wasSubmitted\\\">\\n          <h1 class=\\\"text-center\\\">Thanks for your input!</h1>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n</div>\\n\"","import { Component, ViewEncapsulation, OnInit } from '@angular/core';\nimport { Notification, NotificationEvent, NotificationType } from 'patternfly-ng/notification';\nimport { Solution } from '../domain/';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ApiService } from '../service/api.service';\nimport {Router} from '@angular/router';\n\n@Component({\n//  selector: 'vote',\n  templateUrl: './vote.component.html',\n  styleUrls: ['./vote.component.css']\n})\n\nexport class VoteComponent implements OnInit {\n  lat = 39.0921017;\n  lng = -94.71580062;\n  public elections;\n  public loading = true;\n  public wasSubmitted = false;\n\n  constructor(private api: ApiService, private http: HttpClient, private router: Router) {\n  }\n\nngOnInit() {\n  this.loading = true;\n  this.api.getAccounts().subscribe(s => {\n    if (s != null) {\n      this.elections = s.getElections();\n      this.loading = false;\n    }\n  });\n}\n\nonSubmit(form: any): void {\n    console.log('vote :', form.election);\n    this.api.vote(form.election);\n    this.wasSubmitted = true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}